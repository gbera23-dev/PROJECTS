class Solution {
public:
    bool isValidInteger(string& pos) {
        if(pos.size() == 0 || pos.size() > 3)return false; 
        if(pos.size() > 1 && pos[0] == '0')return false; 
        int o = stoi(pos); 
        if(o >= 0 && o <= 255)return true;
        return false; 
    }

    void helper(string s, string current, vector<string>& sol, int quantity) { 
        if(quantity == 3) {
            if(isValidInteger(s)) {
            current += s; 
            sol.push_back(current); 
            }
            return; 
        } 
        for(int i = 1; i < 4; i++) {
            if(i > s.size())continue;
            string pos = s.substr(0, i);
            if(isValidInteger(pos)) {
                helper(s.substr(i), current + pos + ".", sol, quantity + 1); 
            } 
        }
    }

    vector<string> restoreIpAddresses(string s) {
        vector<string> sol; 
        helper(s, "", sol, 0); 
        return sol; 
    }
};